---
title: "Meta_Chagas"
output:
  word_document: default
  html_document: default
date: "2022-12-21"
---

```{r}
library(tidyverse)
library(ggpubr)
library(ggforce)
library(cowplot)
library(patchwork) 
library(gridExtra)
library(grid)
```



```{r}
source("src/utils_AF_Meta.R")
```

# 1. Creation of the list of data sets
```{r}
AF_Meta = list()
```

```{r}
##GSE41177
load(file = "data_processing/scripts/GSE41177/GSE41177_counts.ro")
load(file = "data_processing/scripts/GSE41177/GSE41177_targets.ro")

AF_Meta[["GSE41177"]] = list("GEX"= GSE41177_counts,
                                       "TARGETS" = GSE41177_targets)

##GSE31821
load(file = "data_processing/scripts/GSE31821/GSE31821_counts.ro")
load(file = "data_processing/scripts/GSE31821/GSE31821_targets.ro")

AF_Meta[["GSE31821"]] = list("GEX"= GSE31821_counts,
                                       "TARGETS" = GSE31821_targets)

##GSE14975
load(file = "data_processing/scripts/GSE14975/GSE14975_counts.ro")
load(file = "data_processing/scripts/GSE14975/GSE14975_targets.ro")

AF_Meta[["GSE14975"]] = list("GEX"= GSE14975_counts,
                                       "TARGETS" = GSE14975_targets)

##GSE79768
load(file = "data_processing/scripts/GSE79768/GSE79768_counts.ro")
load(file = "data_processing/scripts/GSE79768/GSE79768_targets.ro")

AF_Meta[["GSE79768"]] = list("GEX"= GSE79768_counts,
                                       "TARGETS" = GSE79768_targets)

##GSE115574
load(file = "data_processing/scripts/GSE115574/GSE115574_counts.ro")
load(file = "data_processing/scripts/GSE115574/GSE115574_targets.ro")

AF_Meta[["GSE115574"]] = list("GEX"= GSE115574_counts,
                                       "TARGETS" = GSE115574_targets)

##GSE128188
load(file = "data_processing/scripts/GSE128188/GSE128188_counts.ro")
load(file = "data_processing/scripts/GSE128188/GSE128188_targets.ro")

AF_Meta[["GSE128188"]] = list("GEX"= GSE128188_counts,
                                       "TARGETS" = GSE128188_targets)

##GSE69890
load(file = "data_processing/scripts/GSE69890/GSE69890_counts.ro")
load(file = "data_processing/scripts/GSE69890/GSE69890_targets.ro")

AF_Meta[["GSE69890"]] = list("GEX"= dt_matrix,
                                       "TARGETS" = GSE69890_targets)

##Sun
load(file = "data_processing/scripts/Sun/Sun_count.ro")
load(file = "data_processing/scripts/Sun/Sun_targets.ro")

Sun_count <- as.matrix(Sun_count)

AF_Meta[["Sun"]] = list("GEX"= Sun_count,
                                       "TARGETS" = targets)

##Herrera_Rivero
load(file = "data_processing/scripts/Herrera-Rivero/Herrera_Rivero_count.ro")
load(file = "data_processing/scripts/Herrera-Rivero/Herrera_Rivero_targets.ro")

Herrera_Rivero_count <- as.matrix(Herrera_Rivero_count)

AF_Meta[["Herrera_Rivero"]] = list("GEX"= Herrera_Rivero_count,
                                       "TARGETS" = targets)

##Santos
load(file = "data_processing/scripts/Santos/Santos_count.ro")
load(file = "data_processing/scripts/Santos/Santos_targets.ro")

Santos_count <- as.matrix(Santos_count)

AF_Meta[["Santos"]] = list("GEX"= Santos_count,
                                       "TARGETS" = targets)

##Zhu
load(file = "data_processing/scripts/Zhu/Zhu_count.ro")
load(file = "data_processing/scripts/Zhu/Zhu_targets.ro")

Zhu_count <- as.matrix(Zhu_count)

AF_Meta[["Zhu"]] = list("GEX"= Zhu_count,
                                       "TARGETS" = targets)
```


#2. Changing names
```{r}
#Creating dicitonary
GEO_ID = c("GSE115574","GSE14975", "GSE79768", "GSE31821", "GSE41177", "GSE128188", "GSE69890", "Sun", "Herrera_Rivero", "Santos", "Zhu")

newID = c("Deniz_2021","Adam_2010", "Tsai_2016", "Puertas_2018", "Yeh_2013", "Thomas_2019", "Hsu_2018", "Sun_2021", "Herrera_Rivero_2022", "Santos_2020",
         "Zhu_2020")

dictionary = data.frame(GEO_ID, newID,
                        stringsAsFactors = F)

save(dictionary, file = "C:data_processing/tools/dictionaryIDs.ro")
```

```{r}
rownames(dictionary) = dictionary$GEO_ID
current_ids = names(AF_Meta)

names(AF_Meta) = dictionary[current_ids, "newID"]
```

# 3. Generate QC boxplots

```{r}
experiments = names(AF_Meta)

pdf(file = "data_processing/complementary_files/boxplotsMETA.pdf",width = 28, height = 8)
for(x in experiments){
  boxplot(AF_Meta[[x]]$GEX, main=x)
}
dev.off()
```


# 4. Generate QC MDS
```{r}
pdf(file = "data_processing/complementary_files/MDSMETA.pdf",width = 6, height = 4)
for(x in experiments){
  myMDS_AF(AF_Meta[[x]]$GEX,AF_Meta[[x]]$TARGETS, main=x)
}
dev.off()
```

# 4. Differential expression analysis
```{r}
saveRDS(AF_Meta, file = "data/AF_Meta.rds")
```

```{r}
AF = c()
SR = c()

for (study in names(AF_Meta)){
  AF= c(AF,dim(AF_Meta[[study]]$TARGETS %>% dplyr::filter(condition == "AF"))[1])
  SR = c(SR,dim(AF_Meta[[study]]$TARGETS %>% dplyr::filter(condition == "SR"))[1])
}

sample.sizes = data.frame("study"= as.character(names(AF_Meta)), "AF"= AF, "SR"= SR) %>% 
  mutate(total = rowSums(.[,2:3])) %>%
  arrange(desc(total))
```

```{r}
print("total sample summary")
print(sample.sizes)

print("total samples")
print(sum(sample.sizes$total))

print("number of controls")
print(sum(sample.sizes$SR))

print("number of AF")
print(sum(sample.sizes$AF))

```