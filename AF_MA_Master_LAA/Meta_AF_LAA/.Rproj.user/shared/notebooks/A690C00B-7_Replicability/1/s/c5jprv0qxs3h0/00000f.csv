"0","# The Jaccard Index is a statistic used for comparing the similarity and diversity of sample sets. The Jaccard coefficient measures the similarity between finite sample sets and is defined as the size of the intersection divided by the size of the union of the sample sets."
"0",""
"0","# Extra step use all data first to compare platform coverage"
"0","study_genelist_all = lapply(AF_Meta, function(x){"
"0","  gene_list = x$AF_limma[[1]]"
"0","  return(gene_list)"
"0","}) "
"0",""
"0","# Here we compute the Jaccard Index for each pair of experiments in the AF_Meta object, create a data frame with pairwise comparisons and then calculate the average Jaccard Index for each study."
"0",""
"0","jaccard_res_all =  enframe(lapply(experiments, function(set_a){"
"0","  genes_a = study_genelist_all[[set_a]]"
"0","  j_ix_a = lapply(experiments, function(set_b){"
"0","    "
"0","    genes_b = study_genelist_all[[set_b]]"
"0","    "
"0","    #Jaccard Index"
"0","    j_ix = length(intersect(genes_a,genes_b))/length(union(genes_a,genes_b))"
"0","    "
"0","    return(j_ix)"
"0","  })"
"0","  "
"0","  j_ix_a = enframe(j_ix_a, ""StudyB"",""JaccardIx"") %>% "
"0","    unnest()"
"0","  "
"0","  return(j_ix_a)"
"0","  "
"0","}), ""StudyA"") %>% unnest() %>%"
"0","  mutate(StudyA = factor(StudyA,"
"0","                         levels = names(experiment_size)),"
"0","         StudyB = factor(StudyB,"
"0","                         levels = names(experiment_size)))"
"2","Warnung: [38;5;232m`cols` is now required when using `unnest()`.
[36mâ„¹[38;5;232m Please use `cols = c(JaccardIx)`.[39m"
"2","Warnung: [38;5;232m`cols` is now required when using `unnest()`.
[36mâ„¹[38;5;232m Please use `cols = c(JaccardIx)`.[39m"
"2","Warnung: [38;5;232m`cols` is now required when using `unnest()`.
[36mâ„¹[38;5;232m Please use `cols = c(JaccardIx)`.[39m"
"2","Warnung: [38;5;232m`cols` is now required when using `unnest()`.
[36mâ„¹[38;5;232m Please use `cols = c(JaccardIx)`.[39m"
"2","Warnung: [38;5;232m`cols` is now required when using `unnest()`.
[36mâ„¹[38;5;232m Please use `cols = c(JaccardIx)`.[39m"
"2","Warnung: [38;5;232m`cols` is now required when using `unnest()`.
[36mâ„¹[38;5;232m Please use `cols = c(JaccardIx)`.[39m"
"2","Warnung: [38;5;232m`cols` is now required when using `unnest()`.
[36mâ„¹[38;5;232m Please use `cols = c(JaccardIx)`.[39m"
"2","Warnung: [38;5;232m`cols` is now required when using `unnest()`.
[36mâ„¹[38;5;232m Please use `cols = c(JaccardIx)`.[39m"
"2","Warnung: [38;5;232m`cols` is now required when using `unnest()`.
[36mâ„¹[38;5;232m Please use `cols = c(JaccardIx)`.[39m"
"2","Warnung: [38;5;232m`cols` is now required when using `unnest()`.
[36mâ„¹[38;5;232m Please use `cols = c(JaccardIx)`.[39m"
"2","Warnung: [38;5;232m`cols` is now required when using `unnest()`.
[36mâ„¹[38;5;232m Please use `cols = c(JaccardIx)`.[39m"
"2","Warnung: [38;5;232m`cols` is now required when using `unnest()`.
[36mâ„¹[38;5;232m Please use `cols = c(value)`.[39m"
"0","summary_concordance = jaccard_res_all %>% "
"0","                      dplyr::filter(StudyA != StudyB) %>%"
"0","                      group_by(StudyA) %>%"
"0","                      summarise(mean(JaccardIx))"
"0",""
"0","print(""Summary concordance"")"
"1","[1]"
"1"," ""Summary concordance"""
"1","
"
"0","mean(summary_concordance[[2]])"
"1","[1]"
"1"," 0.6954129"
"1","
"
