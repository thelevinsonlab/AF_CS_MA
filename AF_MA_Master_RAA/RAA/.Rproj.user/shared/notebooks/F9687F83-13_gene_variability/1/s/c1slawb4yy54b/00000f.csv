"0","get_all_limma_AF <- function(meta_list, limma_column){"
"0","  "
"0","  sel_cols =  c(""ID"",""ExpID"", limma_column)"
"0","  "
"0","  limma_results = get_tibble_union(meta_list,""AF_limma"") %>% "
"0","    dplyr::select(sel_cols) %>% "
"0","    spread(sel_cols[2],sel_cols[3])"
"0","  "
"0","  limma_results_mat =  as.matrix(limma_results[,-1])"
"0","  rownames(limma_results_mat) = limma_results[[1]]"
"0","  "
"0","  return(limma_results_mat)"
"0","}"
"0",""
"0","run_fisher_meta_AF <- function(meta_list, n_missing = 7){"
"0","  library(survcomp)"
"0","  # Getting p-values from limma"
"0","  limma_pvals = get_all_limma_AF(meta_list = meta_list, ""P.Value"")"
"0","  "
"0","  # Use only genes that are present in all experiments (missing in n at most)"
"0","  limma_results_mat = limma_pvals[rowSums(is.na(limma_pvals))<=n_missing,]"
"0","  "
"0","  # Fisher combined test"
"0","  fisher_pvals = apply(limma_results_mat, 1, function(x){ "
"0","    survcomp::combine.test(x, ""fisher"", na.rm = T)"
"0","  })"
"0","  "
"0","  fisher_pvals_adj = sort(p.adjust(fisher_pvals,""BH""))"
"0","  "
"0","  return(fisher_pvals_adj)"
"0","}"
