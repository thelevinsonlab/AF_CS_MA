"0","# We use linear regression to assess the association of the principal components with LVEF difference."
"0","pca_lm_res = apply((pca_meta_scale$x), 2, function(x, targets){"
"0","  pc_i = x"
"0","  mean_lvef_vect = targets[[""mean_lvef""]]"
"0","  gene_lm = lm(pc_i ~ mean_lvef_vect)"
"0","  lm_stats = summary(gene_lm)"
"0","  "
"0","  # Extract the p-value and R-squared"
"0","  p_value = coef(lm_stats)[2,4]"
"0","  r_squared = lm_stats$r.squared"
"0","  "
"0","  return(c(p_value, r_squared))"
"0","},targets = merged_df) "
"0",""
"0","# Transpose the dataframe to have one row per PC"
"0","pca_lm_res = t(pca_lm_res)"
"0",""
"0","# Convert to dataframe"
"0","pca_lm_res = as.data.frame(pca_lm_res)"
"0",""
"0","# Name the columns"
"0","names(pca_lm_res) <- c(""p.value"", ""r.squared"")"
"0",""
"0","# Filter PCs where p-value is less than some threshold (e.g., 0.05)"
"0","pcs_lvef = subset(pca_lm_res, p.value < 0.05)"
"0",""
"0","pcs_lvef <- pcs_lvef %>% rownames_to_column(""PC"")"
"0",""
"0","pcs_lvef = pca_meta_sum_scale$importance[,pcs_lvef$PC]"
"0",""
"0","total_prop_lvef = sum(pcs_lvef[2,])"
"0",""
"0","# Print the cumulative R-squared"
"0","print(total_prop_lvef)"
"1","[1]"
"1"," 0.0836"
"1","
"
