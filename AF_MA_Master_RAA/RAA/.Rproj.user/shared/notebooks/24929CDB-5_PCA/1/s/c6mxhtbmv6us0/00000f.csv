"0","# Here we transform the original gene expression matrix to a matrix of z-scores, where the values are standardized by the mean and standard deviation of the SR ""healthy"" samples. Then this new matrix will be subjected to PCA, and the results  saved into an RDS file."
"0",""
"0","AF_Meta = lapply(AF_Meta, function(x){"
"0","  "
"0","  targets = x[[""TARGETS""]]"
"0","  gex = x[[""GEX""]]"
"0","  "
"0","  af_gex = gex[,(targets %>% "
"0","                 dplyr::filter(condition == ""AF""))$sample]"
"0",""
"0","  healthy_gex = gex[,(targets %>% "
"0","                   dplyr::filter(condition == ""SR""))$sample]"
"0","  "
"0","  ref_mean = rowMeans(healthy_gex, na.rm = TRUE)"
"0","  "
"0","  ref_sd = sqrt(rowSums((healthy_gex - ref_mean)^2) / (ncol(healthy_gex) - 1))"
"0","  "
"0","  x[[""Zmat""]] = (af_gex - ref_mean)/ref_sd"
"0","  "
"0","  return(x)"
"0","  "
"0","})"
"0",""
"0",""
"0","z_targets = meta_targets %>% filter(condition == ""AF"")"
"0",""
"0","meta_gex_z = get_complete_gex_AF(meta_list = AF_Meta,"
"0","                            complete_targets = z_targets,"
"0","                            gex_key = ""Zmat"")"
"0",""
"0","meta_gex_z_naomit = meta_gex_z[rowSums(is.na(meta_gex_z))==0,]"
"0",""
"0","trans <- t(meta_gex_z_naomit[,z_targets$grl_id])"
"0",""
"0","trans_removed <- trans[ , which(apply(trans, 2, var) != 0)]"
"0",""
"0","pca_meta_z = prcomp(trans_removed,center = T,scale. = T)"
"0",""
"0","pca_meta_z_sum = summary(pca_meta_z) #This is the object to plot"
"0",""
"0","pca_meta_z_sum[[""plot_df""]] = z_targets %>% mutate(""PC1"" = pca_meta_z$x[,1],"
"0","                                                     ""PC2"" = pca_meta_z$x[,2])"
"0",""
"0","saveRDS(pca_meta_z_sum, file = ""data/figure_objects/pca_meta_summary_z.rds"")"
